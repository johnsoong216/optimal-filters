Implementation of Linear Kalman Filter (Vectorized)

Example: Radar Tracking


x = x + v * t + 0.5 * a * t^2 (Dynamic Model)

state t -> Input to prediction algorithm (x at current state, velocity and acceleration)

state t + 1 -> Output of target parameters (x at next state)

Dynamic Model -> Describes relationship between input and output 

At state t, the measurements, location, velocity & acceleration have measurement noise and the dynamic model has process noise (due to external factors)

Kalman Filter (prediction algorithm) is used to account for process uncertainty and measurement uncertainty


Basic Statistics:
Mean/Expected Value (mean - mu, EV - e)
Variance/Std
Gaussian Distribution
Random Variable (Continuous)

Estimate (True value is hidden)
Accuracy (Proximity to true value)
Precision (Variability of measurements)


Measurement
 - Random variable itself described by Normal PDF
 - Mean is the Expected Value
 - Bias (measurement mean and rue value)
 - Accuracy (sigma)


Xn,n estimate of x at time n
Xn, n-1 previous estimate of x made at time n -1 after measurement z n-1
Xn+1, n, future estimate of x made at time n, after measurement z n

Dynamic Model f(Xn,n) = Xn+1, n

To estimate, we add a gain to estimate Xn,n

Set up alpha, beta, gamma

(position, velocity, acceleration are three inputs and need three transition equations)

5 Kalman Filter Equations

1. State Update Equation (Update both Position/Velocity at the same time)

- Estimate of Current State = Predicted Value of Previous State + Factor * (Current Measurement - Predicted Value of Previous State)
* Factor is the Kalman Gain (Kn can change with every iteration)
* Factor and Current Measurement are in n, Previous State is n - 1


2. Transition Equation
- Extrapolates the current state to the next state f(Xn,n) = X(n+1, n)
Measurement - Previous State = Innovation

3. Kalman Gain Equation
alpha/beta/gamma (calculated dynamically for each filter iteration)
Kalman Gain = Estimated Error/(Estimated Error + Measurement Error)

State Update Equation: Xn,n = Xn,n-1 + Kn(zn - xn,n-1) = (1 - Kn)Xn,n-1 + Knzn

4. Covariance Equation
Pn,n = (1 - Kn)Pn,n-1 (Estimate uncertainty gets smaller with each filter iteration)


5. Covraiance Extrapolation Equation
Pn+1, n = Pn,n

Putting all together
"Measure, Update, Predict"


Step 1
Initialization
- Initial System State
- Initial State Uncertainty

Step 2
Measurement
- Measurement System State
- Measurement Uncertainty (Equipment Vendor, Provided)

Step 3
State Update
- Process inputs (Measured Value(n), Uncertainty(n), Previous State Estimate (n-1), Estimate Uncertainty (n-1))
- Calculates Kalman Gain
- Outputs System State Estimate (Xn,n), Estimate Uncertainty (Pn,n)

Step 4
Prediction
- Looping, Keeps going through


Kalman Filter requires an Initial Guess (First Estimate, Parameter Input)
Kalman Filter Loops and Updates Every Filter



Update Covariance Extrapolation Equation with Process Noise Variable
- Uncertainty of the Dynamic Model (Process Noise)
- pn+1, n = pn,n + qn
- Estimate uncertainty quickly goes down

Kalman Gain Decreases -> Estimate Weight Up, Measurement Weight Down
High Process Uncertainty -> Measurement Weight is Much Higher than Estimate (Kalman Gain is High)
- Best Practice is to have a model that is very close to reality and leave a small noise for process noise

Example -Estimate Temperature of Heating Liquid
- https://www.kalmanfilter.net/kalman1d.html


Multidimensional

Position, Velocity, Acceleration (9 dimensional)

Define a matrix that has the equation for updating positions/velocities/acceleration


State Extrapolation Equation Dimensions

state vector n * 1
state transition matrix n * n
input variable m * 1 (acceleration)
control matrix n * m 
process noise vector n * 1

Linear Time-Invariant (System function is not time dependent, static)

Covariance Extrapolation Equation
Covariance matrix
Process Noise (Diagonal Matrix, Could be independent or correlated with velocity/acceleration)

Discrete Q matrix construction methods
Observation Matrix (Certain states are measured) (Output vector is the measurement)
